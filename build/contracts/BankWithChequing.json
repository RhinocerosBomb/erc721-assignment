{
  "contractName": "BankWithChequing",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "accountOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ammount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "accountOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "ammount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_chequesOwned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_ethBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "_getChequeInformation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "_signAmount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "_signAmountAndReceiver",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "_signReceiver",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chequeId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "usableFromDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiraryDate",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "_printCheque",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usableFromDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiraryDate",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "_printBlankCheque",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chequeId",
          "type": "uint256"
        }
      ],
      "name": "_cashCheque",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ammount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ammount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"_cashCheque\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_chequesOwned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_ethBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"_getChequeInformation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usableFromDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiraryDate\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"_printBlankCheque\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usableFromDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiraryDate\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"_printCheque\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"_signAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"_signAmountAndReceiver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"_signReceiver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chequeId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chequeId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jason/Documents/Github/erc721-assignment/contracts/BankWithChequin.sol\":\"BankWithChequing\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jason/Documents/Github/erc721-assignment/contracts/Address.sol\":{\"keccak256\":\"0xc807743a6a24ee3778a124acea2c8f50c60284790f518449c324f56210506674\",\"urls\":[\"bzz-raw://07faf7e90064582ead9e1fbf0349cfc8c53a7b989f62195fb76e3cd3045d41f0\",\"dweb:/ipfs/QmSRF2QFhQNG9qeQDU3D6MqjH6diVbwC4mS7TovPr3WBo8\"]},\"/home/jason/Documents/Github/erc721-assignment/contracts/Bank.sol\":{\"keccak256\":\"0x39ad4ddbd55692834848b7bf57e99244f4612e98580a7c18f2b286db22cd6573\",\"urls\":[\"bzz-raw://e3fbdef2fa095565ea133ab88ae99ff89740036e8900236b537cd204ca5a013c\",\"dweb:/ipfs/QmPUYnVEQFu14q6wq1EfsudGpzUJVArMTHrLuSeiU1vxpa\"]},\"/home/jason/Documents/Github/erc721-assignment/contracts/BankWithChequin.sol\":{\"keccak256\":\"0x3b67bc7dd989a10725dbd9825774ebd6ca397b53a6e9920c50e15cb28fec12b8\",\"urls\":[\"bzz-raw://60418b9410fc4a78398d7b4515d62c5794edcf2b9db92354388547dfab19260d\",\"dweb:/ipfs/QmS5drDEJdJtkJx7xFhNJcHvKzLfZw6xDLh4qr1CYZBKZ2\"]},\"/home/jason/Documents/Github/erc721-assignment/contracts/Chequing.sol\":{\"keccak256\":\"0x0d68ff2434eae9aab55d0875fa94e8853ad59e6547fefb74141df09932713d94\",\"urls\":[\"bzz-raw://ef59358862473193d568c09fb735ba596ffe81c470b3bb2f4ee170152bd64f71\",\"dweb:/ipfs/QmdDfP2XDLQ1Kc99vURxeHxMdsY3NDxquhzfjJyjVU1nF2\"]},\"/home/jason/Documents/Github/erc721-assignment/contracts/ERC165.sol\":{\"keccak256\":\"0x352a5c62d73992c93e94c506075c7fe939bb9bcd2a3b53dbc9c0d521138580b2\",\"urls\":[\"bzz-raw://e8a29d24b6abffd85b6c2576364c6bcbfef9ffbd422fe896da27e07005426c44\",\"dweb:/ipfs/QmcqH7U25KLD7V7nuQjL7VCaKPcyFsdK35mmMwEZkJ9CtT\"]},\"/home/jason/Documents/Github/erc721-assignment/contracts/IERC165.sol\":{\"keccak256\":\"0x8f22c02d0747e399fe3fba0b9284d0710ac6b7d4d07be7e1f8d1f153c426daa2\",\"urls\":[\"bzz-raw://f7337c3fc4b7d4a7123621d2b09d38d357cec18da98847d59fdda3b9c19907a3\",\"dweb:/ipfs/QmRh9EDoRdQYvQrLSN6buEze6MvF6nt1T4xrdstRr5HJRB\"]},\"/home/jason/Documents/Github/erc721-assignment/contracts/IERC721.sol\":{\"keccak256\":\"0x9b1ae50a5b2c1ddfa5fe97e37f6ceef603016116634ae58cac1605a296a38566\",\"urls\":[\"bzz-raw://7fe89c18545e8226848ae6dddc183bd2b5e880480cba15a02c9adf48722bf1cc\",\"dweb:/ipfs/QmS17WSde6KdDdQd53gijf2QDY233fwQDCEMdMCBDckwLj\"]},\"/home/jason/Documents/Github/erc721-assignment/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"/home/jason/Documents/Github/erc721-assignment/contracts/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600255620000216301ffc9a760e01b6200003f60201b60201c565b620000396380ac58cd60e01b6200003f60201b60201c565b62000148565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620000dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61325080620001586000396000f3fe60806040526004361061012a5760003560e01c8063a22cb465116100ab578063b88d4fde1161006f578063b88d4fde14610757578063ca592c5114610869578063d880e288146108c4578063e985e9c5146109b8578063f3080e4714610a41578063fbb0759a14610aa65761012a565b8063a22cb46514610532578063aad9d27c1461058f578063abb721ce146106ad578063ac6a2b5d146106b7578063aefe91ed146106f25761012a565b80632fcd6bce116100f25780632fcd6bce1461035757806342842e0e146103925780636352211e1461040d57806370a08231146104885780639ac377ef146104ed5761012a565b806301ffc9a71461012f578063023f18a1146101a1578063081812fc14610206578063095ea7b31461028157806323b872dd146102dc575b600080fd5b34801561013b57600080fd5b506101876004803603602081101561015257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b77565b604051808215151515815260200191505060405180910390f35b3480156101ad57600080fd5b50610204600480360360608110156101c457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bdf565b005b34801561021257600080fd5b5061023f6004803603602081101561022957600080fd5b8101908080359060200190929190505050610eeb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028d57600080fd5b506102da600480360360408110156102a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f86565b005b3480156102e857600080fd5b50610355600480360360608110156102ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061115f565b005b34801561036357600080fd5b506103906004803603602081101561037a57600080fd5b81019080803590602001909291905050506111ce565b005b34801561039e57600080fd5b5061040b600480360360608110156103b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115df565b005b34801561041957600080fd5b506104466004803603602081101561043057600080fd5b81019080803590602001909291905050506115ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049457600080fd5b506104d7600480360360208110156104ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116c7565b6040518082815260200191505060405180910390f35b3480156104f957600080fd5b506105306004803603604081101561051057600080fd5b810190808035906020019092919080359060200190929190505050611795565b005b34801561053e57600080fd5b5061058d6004803603604081101561055557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061189b565b005b34801561059b57600080fd5b50610693600480360360a08110156105b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561060d57600080fd5b82018360208201111561061f57600080fd5b8035906020019184600183028401116401000000008311171561064157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a3e565b604051808215151515815260200191505060405180910390f35b6106b5611a5a565b005b3480156106c357600080fd5b506106f0600480360360208110156106da57600080fd5b8101908080359060200190929190505050611af2565b005b3480156106fe57600080fd5b506107416004803603602081101561071557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bd2565b6040518082815260200191505060405180910390f35b34801561076357600080fd5b506108676004803603608081101561077a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156107e157600080fd5b8201836020820111156107f357600080fd5b8035906020019184600183028401116401000000008311171561081557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bea565b005b34801561087557600080fd5b506108c26004803603604081101561088c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c5b565b005b3480156108d057600080fd5b5061099e600480360360608110156108e757600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561091857600080fd5b82018360208201111561092a57600080fd5b8035906020019184600183028401116401000000008311171561094c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e13565b604051808215151515815260200191505060405180910390f35b3480156109c457600080fd5b50610a27600480360360408110156109db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e2c565b604051808215151515815260200191505060405180910390f35b348015610a4d57600080fd5b50610a9060048036036020811015610a6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ec0565b6040518082815260200191505060405180910390f35b348015610ab257600080fd5b50610adf60048036036020811015610ac957600080fd5b8101908080359060200190929190505050611ed8565b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000831415610c39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806130656022913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612f086025913960400191505060405180910390fd5b610cc9338261203b565b610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612ea06036913960400191505060405180910390fd5b6000610d298261212f565b9050600060088281548110610d3a57fe5b90600052602060002090600702016003015414610da2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131a36023913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660088281548110610dc757fe5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131a36023913960400191505060405180910390fd5b8260088281548110610e7357fe5b906000526020600020906007020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360088281548110610ed057fe5b90600052602060002090600702016003018190555050505050565b6000610ef68261214c565b610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061312d602c913960400191505060405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610f91826115ff565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611018576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131826021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061105857506110578133611e2c565b5b6110ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061302d6038913960400191505060405180910390fd5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b611169338261203b565b6111be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806131c66031913960400191505060405180910390fd5b6111c98383836121be565b505050565b6000811415611228576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f516021913960400191505060405180910390fd5b60006112338261212f565b90506000811161128e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061310a6023913960400191505060405180910390fd5b600042905061129b612e36565b600883815481106112a857fe5b90600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050818160a00151116113fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806130066027913960400191505060405180910390fd5b60008160c0015114806114135750818160c00151115b611485576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436865717565206973206578706972656400000000000000000000000000000081525060200191505060405180910390fd5b600080826000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816060015111611523576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806130da6030913960400191505060405180910390fd5b8060600151600080836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508060600151600080836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506115d88160400151612433565b5050505050565b6115fa83838360405180602001604052806000815250611bea565b505050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806130b16029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561174e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613087602a913960400191505060405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008214156117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806130656022913960400191505060405180910390fd5b60006117fa8261212f565b905060006008828154811061180b57fe5b90600052602060002090600702016003015414611873576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131a36023913960400191505060405180910390fd5b826008828154811061188157fe5b906000526020600020906007020160030181905550505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561193d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000611a4d8686868686612599565b6001905095945050505050565b611aab346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461261390919063ffffffff16565b50343373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60405160405180910390a3565b611b43816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461269b90919063ffffffff16565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611b8a573d6000803e3d6000fd5b50803373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a350565b60036020528060005260406000206000915090505481565b611bf4338361203b565b611c49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806131c66031913960400191505060405180910390fd5b611c55848484846126e5565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612f086025913960400191505060405180910390fd5b6000611cec8261212f565b9050600073ffffffffffffffffffffffffffffffffffffffff1660088281548110611d1357fe5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611db1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131a36023913960400191505060405180910390fd5b8260088281548110611dbf57fe5b906000526020600020906007020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000611e23600080868686611a3e565b90509392505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006020528060005260406000206000915090505481565b600080600080600080600080611eed8961212f565b9050611ef7612e36565b60088281548110611f0457fe5b90600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050806000015181602001518260400151836060015184608001518560a001518660c0015198509850985098509850985098505050919395979092949650565b60006120468261214c565b61209b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612fda602c913960400191505060405180910390fd5b60006120a6836115ff565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061211557508373ffffffffffffffffffffffffffffffffffffffff166120fd84610eeb565b73ffffffffffffffffffffffffffffffffffffffff16145b8061212657506121258185611e2c565b5b91505092915050565b600060056000838152602001908152602001600020549050919050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166121de826115ff565b73ffffffffffffffffffffffffffffffffffffffff161461224a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806131596029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122d0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612f2d6024913960400191505060405180910390fd5b6122d981612757565b61232c6001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461261390919063ffffffff16565b506123806001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461269b90919063ffffffff16565b50816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061243f338361203b565b612494576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806131f76025913960400191505060405180910390fd5b61249d82612757565b6124f86001600360006124af866115ff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461269b90919063ffffffff16565b5060006004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550813373ffffffffffffffffffffffffffffffffffffffff167f9dc29fac0ba6d4fc521c69c2b0c636d612e3343bc39ed934429b8876b0d12cba60405160405180910390a360019050919050565b60006125a786868686612815565b90506125b66000338385612b42565b61260b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612ed66032913960400191505060405180910390fd5b505050505050565b600080828401905083811015612691576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006126dd83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d2b565b905092915050565b6126f08484846121be565b6126fc84848484612b42565b612751576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612ed66032913960400191505060405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128125760006006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080429050600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156128be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b828111806128cc5750600083145b612921576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526068815260200180612f726068913960800191505060405180910390fd5b612937600160025461261390919063ffffffff16565b600281905550612945612e36565b6040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff16815260200160025481526020018781526020018381526020018681526020018581525090506008819080600181540180825580915050906001820390600052602060002090600702016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050503360046000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002543373ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688560405160405180910390a360025492505050949350505050565b6000612b638473ffffffffffffffffffffffffffffffffffffffff16612deb565b612b705760019050612d23565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c4b578082015181840152602081019050612c30565b50505050905090810190601f168015612c785780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612c9a57600080fd5b505af1158015612cae573d6000803e3d6000fd5b505050506040513d6020811015612cc457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000838311158290612dd8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d9d578082015181840152602081019050612d82565b50505050905090810190601f168015612dca5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612e2d57506000801b8214155b92505050919050565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152509056fe43616e6e6f74207369676e206120636865717565207468617420796f7520646f206e6f74206f776e206f7220617070726f7665206f664552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e74657243616e6e6f74207369676e20612063686571756520776974682061646472657373203078304552433732313a207472616e7366657220746f20746865207a65726f20616464726573735b75696e743235362063686571756549645d2063616e6e6f74206265207a65726f43616e6e6f742063726561746520616e2065787069726564206368657175652e20546f20637265617465206120636865717565207468617420646f65736e2774206578706972652c207573652030206173205b75696e74323536206578706972617279446174655d4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e436865717565206973206e6f742076616c696420746f2075736520617420746869732074696d654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c43616e6e6f74207369676e206120636865717565207769746820616d6f756e7420304552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4e6f7420656e6f7567682066756e647320746f207472616e736665722e204368657175652068617320626f756e6365644368657175652077697468207468697320696420646f6573206e6f74206578697374204552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e657241207369676e6564206368657175652063616e6e6f742062652072652d7369676e65644552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776ea265627a7a7231582005a7a9dc8677395d973f38facc97ad6d63be5aa94564f4ac85dfb5ec3a2c05f364736f6c63430005100032",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c8063a22cb465116100ab578063b88d4fde1161006f578063b88d4fde14610757578063ca592c5114610869578063d880e288146108c4578063e985e9c5146109b8578063f3080e4714610a41578063fbb0759a14610aa65761012a565b8063a22cb46514610532578063aad9d27c1461058f578063abb721ce146106ad578063ac6a2b5d146106b7578063aefe91ed146106f25761012a565b80632fcd6bce116100f25780632fcd6bce1461035757806342842e0e146103925780636352211e1461040d57806370a08231146104885780639ac377ef146104ed5761012a565b806301ffc9a71461012f578063023f18a1146101a1578063081812fc14610206578063095ea7b31461028157806323b872dd146102dc575b600080fd5b34801561013b57600080fd5b506101876004803603602081101561015257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b77565b604051808215151515815260200191505060405180910390f35b3480156101ad57600080fd5b50610204600480360360608110156101c457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bdf565b005b34801561021257600080fd5b5061023f6004803603602081101561022957600080fd5b8101908080359060200190929190505050610eeb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028d57600080fd5b506102da600480360360408110156102a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f86565b005b3480156102e857600080fd5b50610355600480360360608110156102ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061115f565b005b34801561036357600080fd5b506103906004803603602081101561037a57600080fd5b81019080803590602001909291905050506111ce565b005b34801561039e57600080fd5b5061040b600480360360608110156103b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115df565b005b34801561041957600080fd5b506104466004803603602081101561043057600080fd5b81019080803590602001909291905050506115ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049457600080fd5b506104d7600480360360208110156104ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116c7565b6040518082815260200191505060405180910390f35b3480156104f957600080fd5b506105306004803603604081101561051057600080fd5b810190808035906020019092919080359060200190929190505050611795565b005b34801561053e57600080fd5b5061058d6004803603604081101561055557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061189b565b005b34801561059b57600080fd5b50610693600480360360a08110156105b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561060d57600080fd5b82018360208201111561061f57600080fd5b8035906020019184600183028401116401000000008311171561064157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a3e565b604051808215151515815260200191505060405180910390f35b6106b5611a5a565b005b3480156106c357600080fd5b506106f0600480360360208110156106da57600080fd5b8101908080359060200190929190505050611af2565b005b3480156106fe57600080fd5b506107416004803603602081101561071557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bd2565b6040518082815260200191505060405180910390f35b34801561076357600080fd5b506108676004803603608081101561077a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156107e157600080fd5b8201836020820111156107f357600080fd5b8035906020019184600183028401116401000000008311171561081557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bea565b005b34801561087557600080fd5b506108c26004803603604081101561088c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c5b565b005b3480156108d057600080fd5b5061099e600480360360608110156108e757600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561091857600080fd5b82018360208201111561092a57600080fd5b8035906020019184600183028401116401000000008311171561094c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e13565b604051808215151515815260200191505060405180910390f35b3480156109c457600080fd5b50610a27600480360360408110156109db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e2c565b604051808215151515815260200191505060405180910390f35b348015610a4d57600080fd5b50610a9060048036036020811015610a6457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ec0565b6040518082815260200191505060405180910390f35b348015610ab257600080fd5b50610adf60048036036020811015610ac957600080fd5b8101908080359060200190929190505050611ed8565b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000831415610c39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806130656022913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612f086025913960400191505060405180910390fd5b610cc9338261203b565b610d1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612ea06036913960400191505060405180910390fd5b6000610d298261212f565b9050600060088281548110610d3a57fe5b90600052602060002090600702016003015414610da2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131a36023913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660088281548110610dc757fe5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131a36023913960400191505060405180910390fd5b8260088281548110610e7357fe5b906000526020600020906007020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360088281548110610ed057fe5b90600052602060002090600702016003018190555050505050565b6000610ef68261214c565b610f4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061312d602c913960400191505060405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610f91826115ff565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611018576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806131826021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061105857506110578133611e2c565b5b6110ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018061302d6038913960400191505060405180910390fd5b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b611169338261203b565b6111be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806131c66031913960400191505060405180910390fd5b6111c98383836121be565b505050565b6000811415611228576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f516021913960400191505060405180910390fd5b60006112338261212f565b90506000811161128e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061310a6023913960400191505060405180910390fd5b600042905061129b612e36565b600883815481106112a857fe5b90600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050818160a00151116113fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806130066027913960400191505060405180910390fd5b60008160c0015114806114135750818160c00151115b611485576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f436865717565206973206578706972656400000000000000000000000000000081525060200191505060405180910390fd5b600080826000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816060015111611523576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806130da6030913960400191505060405180910390fd5b8060600151600080836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508060600151600080836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506115d88160400151612433565b5050505050565b6115fa83838360405180602001604052806000815250611bea565b505050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806130b16029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561174e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613087602a913960400191505060405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008214156117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806130656022913960400191505060405180910390fd5b60006117fa8261212f565b905060006008828154811061180b57fe5b90600052602060002090600702016003015414611873576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131a36023913960400191505060405180910390fd5b826008828154811061188157fe5b906000526020600020906007020160030181905550505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561193d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000611a4d8686868686612599565b6001905095945050505050565b611aab346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461261390919063ffffffff16565b50343373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60405160405180910390a3565b611b43816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461269b90919063ffffffff16565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611b8a573d6000803e3d6000fd5b50803373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a350565b60036020528060005260406000206000915090505481565b611bf4338361203b565b611c49576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806131c66031913960400191505060405180910390fd5b611c55848484846126e5565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612f086025913960400191505060405180910390fd5b6000611cec8261212f565b9050600073ffffffffffffffffffffffffffffffffffffffff1660088281548110611d1357fe5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611db1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806131a36023913960400191505060405180910390fd5b8260088281548110611dbf57fe5b906000526020600020906007020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000611e23600080868686611a3e565b90509392505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006020528060005260406000206000915090505481565b600080600080600080600080611eed8961212f565b9050611ef7612e36565b60088281548110611f0457fe5b90600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815250509050806000015181602001518260400151836060015184608001518560a001518660c0015198509850985098509850985098505050919395979092949650565b60006120468261214c565b61209b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612fda602c913960400191505060405180910390fd5b60006120a6836115ff565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061211557508373ffffffffffffffffffffffffffffffffffffffff166120fd84610eeb565b73ffffffffffffffffffffffffffffffffffffffff16145b8061212657506121258185611e2c565b5b91505092915050565b600060056000838152602001908152602001600020549050919050565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b8273ffffffffffffffffffffffffffffffffffffffff166121de826115ff565b73ffffffffffffffffffffffffffffffffffffffff161461224a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806131596029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122d0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612f2d6024913960400191505060405180910390fd5b6122d981612757565b61232c6001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461261390919063ffffffff16565b506123806001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461269b90919063ffffffff16565b50816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061243f338361203b565b612494576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806131f76025913960400191505060405180910390fd5b61249d82612757565b6124f86001600360006124af866115ff565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461269b90919063ffffffff16565b5060006004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550813373ffffffffffffffffffffffffffffffffffffffff167f9dc29fac0ba6d4fc521c69c2b0c636d612e3343bc39ed934429b8876b0d12cba60405160405180910390a360019050919050565b60006125a786868686612815565b90506125b66000338385612b42565b61260b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612ed66032913960400191505060405180910390fd5b505050505050565b600080828401905083811015612691576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006126dd83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d2b565b905092915050565b6126f08484846121be565b6126fc84848484612b42565b612751576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612ed66032913960400191505060405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128125760006006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080429050600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156128be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b828111806128cc5750600083145b612921576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526068815260200180612f726068913960800191505060405180910390fd5b612937600160025461261390919063ffffffff16565b600281905550612945612e36565b6040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff16815260200160025481526020018781526020018381526020018681526020018581525090506008819080600181540180825580915050906001820390600052602060002090600702016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050503360046000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002543373ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688560405160405180910390a360025492505050949350505050565b6000612b638473ffffffffffffffffffffffffffffffffffffffff16612deb565b612b705760019050612d23565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612c4b578082015181840152602081019050612c30565b50505050905090810190601f168015612c785780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612c9a57600080fd5b505af1158015612cae573d6000803e3d6000fd5b505050506040513d6020811015612cc457600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000838311158290612dd8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d9d578082015181840152602081019050612d82565b50505050905090810190601f168015612dca5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612e2d57506000801b8214155b92505050919050565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152509056fe43616e6e6f74207369676e206120636865717565207468617420796f7520646f206e6f74206f776e206f7220617070726f7665206f664552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e74657243616e6e6f74207369676e20612063686571756520776974682061646472657373203078304552433732313a207472616e7366657220746f20746865207a65726f20616464726573735b75696e743235362063686571756549645d2063616e6e6f74206265207a65726f43616e6e6f742063726561746520616e2065787069726564206368657175652e20546f20637265617465206120636865717565207468617420646f65736e2774206578706972652c207573652030206173205b75696e74323536206578706972617279446174655d4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e436865717565206973206e6f742076616c696420746f2075736520617420746869732074696d654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c43616e6e6f74207369676e206120636865717565207769746820616d6f756e7420304552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4e6f7420656e6f7567682066756e647320746f207472616e736665722e204368657175652068617320626f756e6365644368657175652077697468207468697320696420646f6573206e6f74206578697374204552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e657241207369676e6564206368657175652063616e6e6f742062652072652d7369676e65644552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776ea265627a7a7231582005a7a9dc8677395d973f38facc97ad6d63be5aa94564f4ac85dfb5ec3a2c05f364736f6c63430005100032",
  "sourceMap": "71:1321:2:-;;;647:1:3;607:41;;718:40:5;385:10;737:20;;718:18;;;:40;;:::i;:::-;1224::3;1098:10;1243:20;;1224:18;;;:40;;:::i;:::-;71:1321:2;;1442:190:5;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;71:1321:2:-;;;;;;;",
  "deployedSourceMap": "71:1321:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:133:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5760:713:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5760:713:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5760:713:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2135:204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2135:204:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2135:204:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1713:416;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1713:416:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1713:416:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3779:288;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3779:288:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3779:288:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;585:805:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;585:805:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;585:805:2;;;;;;;;;;;;;;;;;:::i;:::-;;3084:134:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3084:134:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3084:134:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1474:233;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1474:233:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1474:233:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1277:191;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1277:191:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1277:191:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5421:333;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5421:333:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5421:333:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2345:243;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2345:243:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2345:243:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;121:250:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;121:250:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;121:250:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;121:250:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;121:250:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;121:250:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;121:250:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;306:135:1;;;:::i;:::-;;447:174;;8:9:-1;5:2;;;30:1;27;20:12;5:2;447:174:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;447:174:1;;;;;;;;;;;;;;;;;:::i;:::-;;655:49:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;655:49:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;655:49:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3225:270;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3225:270:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3225:270:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3225:270:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3225:270:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3225:270:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3225:270:3;;;;;;;;;;;;;;;:::i;:::-;;5049:366;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5049:366:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5049:366:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;377:202:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;377:202:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;377:202:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;377:202:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;377:202:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;377:202:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;377:202:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2594:145:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2594:145:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2594:145:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;252:47:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:47:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;252:47:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4519:393:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4519:393:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4519:393:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:5;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;5760:713:3:-;5879:1;5869:6;:11;;5861:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5957:1;5937:22;;:8;:22;;;;5929:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6019:40;6038:10;6050:8;6019:18;:40::i;:::-;6011:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6128:19;6150:25;6166:8;6150:15;:25::i;:::-;6128:47;;6225:1;6193:8;6202:11;6193:21;;;;;;;;;;;;;;;;;;:28;;;:33;6185:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6326:1;6284:44;;:8;6293:11;6284:21;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:44;;;6276:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6411:8;6378;6387:11;6378:21;;;;;;;;;;;;;;;;;;:30;;;:41;;;;;;;;;;;;;;;;;;6460:6;6429:8;6438:11;6429:21;;;;;;;;;;;;;;;;;;:28;;:37;;;;5760:713;;;;:::o;2135:204::-;2195:7;2222:17;2230:8;2222:7;:17::i;:::-;2214:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2306:16;:26;2323:8;2306:26;;;;;;;;;;;;;;;;;;;;;2299:33;;2135:204;;;:::o;1713:416::-;1777:13;1793:17;1801:8;1793:7;:17::i;:::-;1777:33;;1834:5;1828:11;;:2;:11;;;;1820:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;1896:19;;:10;:19;;;:58;;;;1919:35;1936:5;1943:10;1919:16;:35::i;:::-;1896:58;1888:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:2;2047:16;:26;2064:8;2047:26;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2113:8;2109:2;2093:29;;2102:5;2093:29;;;;;;;;;;;;1713:416;;;:::o;3779:288::-;3922:40;3941:10;3953:8;3922:18;:40::i;:::-;3914:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4027:33;4041:4;4047:2;4051:8;4027:13;:33::i;:::-;3779:288;;;:::o;585:805:2:-;661:1;649:8;:13;;641:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:19;732:25;748:8;732:15;:25::i;:::-;710:47;;789:1;775:11;:15;767:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:17;860:15;840:35;;885:20;;:::i;:::-;908:8;917:11;908:21;;;;;;;;;;;;;;;;;;885:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:9;947:6;:21;;;:33;939:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1065:1;1042:6;:19;;;:24;:59;;;;1092:9;1070:6;:19;;;:31;1042:59;1034:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1158:11;:32;1170:6;:19;;;1158:32;;;;;;;;;;;;;;;;1142:6;:13;;;:48;1134:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1289:6;:13;;;1253:11;:32;1265:6;:19;;;1253:32;;;;;;;;;;;;;;;;:49;;;;;;;;;;;1344:6;:13;;;1312:11;:28;1324:6;:15;;;1312:28;;;;;;;;;;;;;;;;:45;;;;;;;;;;;1367:16;1373:6;:9;;;1367:5;:16::i;:::-;;585:805;;;;:::o;3084:134:3:-;3171:40;3188:4;3194:2;3198:8;3171:40;;;;;;;;;;;;:16;:40::i;:::-;3084:134;;;:::o;1474:233::-;1531:7;1550:13;1566:17;:28;1584:9;1566:28;;;;;;;;;;;;;;;;;;;;;1550:44;;1629:1;1612:19;;:5;:19;;;;1604:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:5;1688:12;;;1474:233;;;:::o;1277:191::-;1332:7;1375:1;1358:19;;:5;:19;;;;1350:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1441:13;:20;1455:5;1441:20;;;;;;;;;;;;;;;;1434:27;;1277:191;;;:::o;5421:333::-;5511:1;5501:6;:11;;5493:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:19;5584:25;5600:8;5584:15;:25::i;:::-;5562:47;;5659:1;5627:8;5636:11;5627:21;;;;;;;;;;;;;;;;;;:28;;;:33;5619:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5741:6;5710:8;5719:11;5710:21;;;;;;;;;;;;;;;;;;:28;;:37;;;;5421:333;;;:::o;2345:243::-;2430:10;2424:16;;:2;:16;;;;2416:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:8;2481:18;:30;2500:10;2481:30;;;;;;;;;;;;;;;:34;2512:2;2481:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;2568:2;2541:40;;2556:10;2541:40;;;2572:8;2541:40;;;;;;;;;;;;;;;;;;;;;;2345:243;;:::o;121:250:2:-;263:4;279:64;289:8;299:6;307:14;323:12;337:5;279:9;:64::i;:::-;360:4;353:11;;121:250;;;;;;;:::o;306:135:1:-;351:38;379:9;351:11;:23;363:10;351:23;;;;;;;;;;;;;;;;:27;;:38;;;;:::i;:::-;;424:9;412:10;404:30;;;;;;;;;;;;306:135::o;447:174::-;499:35;527:6;499:11;:23;511:10;499:23;;;;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;;544:10;:19;;:27;564:6;544:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;544:27:1;607:6;595:10;586:28;;;;;;;;;;;;447:174;:::o;655:49:3:-;;;;;;;;;;;;;;;;;:::o;3225:270::-;3340:40;3359:10;3371:8;3340:18;:40::i;:::-;3332:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3444:44;3462:4;3468:2;3472:8;3482:5;3444:17;:44::i;:::-;3225:270;;;;:::o;5049:366::-;5153:1;5133:22;;:8;:22;;;;5125:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5208:19;5230:25;5246:8;5230:15;:25::i;:::-;5208:47;;5315:1;5273:44;;:8;5282:11;5273:21;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:44;;;5265:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5400:8;5367;5376:11;5367:21;;;;;;;;;;;;;;;;;;:30;;;:41;;;;;;;;;;;;;;;;;;5049:366;;;:::o;377:202:2:-;486:4;508:64;529:1;533;536:14;552:12;566:5;508:12;:64::i;:::-;501:71;;377:202;;;;;:::o;2594:145:3:-;2674:4;2697:18;:25;2716:5;2697:25;;;;;;;;;;;;;;;:35;2723:8;2697:35;;;;;;;;;;;;;;;;;;;;;;;;;2690:42;;2594:145;;;;:::o;252:47:1:-;;;;;;;;;;;;;;;;;:::o;4519:393:3:-;4588:7;4597;4606;4615;4624;4633;4642;4661:19;4683:25;4699:8;4683:15;:25::i;:::-;4661:47;;4718:20;;:::i;:::-;4741:8;4750:11;4741:21;;;;;;;;;;;;;;;;;;4718:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4780:6;:19;;;4801:6;:15;;;4818:6;:9;;;4829:6;:13;;;4844:6;:16;;;4862:6;:21;;;4885:6;:19;;;4772:133;;;;;;;;;;;;;;;;4519:393;;;;;;;;;:::o;2745:333::-;2831:4;2855:17;2863:8;2855:7;:17::i;:::-;2847:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2931:13;2947:17;2955:8;2947:7;:17::i;:::-;2931:33;;2993:5;2982:16;;:7;:16;;;:52;;;;3027:7;3002:32;;:21;3014:8;3002:11;:21::i;:::-;:32;;;2982:52;:88;;;;3038:32;3055:5;3062:7;3038:16;:32::i;:::-;2982:88;2974:97;;;2745:333;;;;:::o;4918:125::-;4984:7;5010:16;:26;5027:8;5010:26;;;;;;;;;;;;5003:33;;4918:125;;;:::o;8025:160::-;8083:4;8099:13;8115:17;:27;8133:8;8115:27;;;;;;;;;;;;;;;;;;;;;8099:43;;8176:1;8159:19;;:5;:19;;;;8152:26;;;8025:160;;;:::o;4073:440::-;4188:4;4167:25;;:17;4175:8;4167:7;:17::i;:::-;:25;;;4159:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4270:1;4256:16;;:2;:16;;;;4248:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4324:24;4339:8;4324:14;:24::i;:::-;4359:26;4383:1;4359:13;:19;4373:4;4359:19;;;;;;;;;;;;;;;;:23;;:26;;;;:::i;:::-;;4395:24;4417:1;4395:13;:17;4409:2;4395:17;;;;;;;;;;;;;;;;:21;;:24;;;;:::i;:::-;;4460:2;4430:17;:27;4448:8;4430:27;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;4497:8;4493:2;4478:28;;4487:4;4478:28;;;;;;;;;;;;4073:440;;;:::o;7657:362::-;7708:4;7732:40;7751:10;7763:8;7732:18;:40::i;:::-;7724:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7825:24;7840:8;7825:14;:24::i;:::-;7860:39;7897:1;7860:13;:32;7874:17;7882:8;7874:7;:17::i;:::-;7860:32;;;;;;;;;;;;;;;;:36;;:39;;;;:::i;:::-;;7947:1;7909:17;:27;7927:8;7909:27;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;7982:8;7970:10;7965:26;;;;;;;;;;;;8008:4;8001:11;;7657:362;;;:::o;6479:353::-;6617:16;6636:53;6642:8;6652:6;6660:14;6676:12;6636:5;:53::i;:::-;6617:72;;6707:63;6738:1;6742:10;6754:8;6764:5;6707:22;:63::i;:::-;6699:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6479:353;;;;;;:::o;834:176:10:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3501:272:3:-;3611:33;3625:4;3631:2;3635:8;3611:13;:33::i;:::-;3662:49;3685:4;3691:2;3695:8;3705:5;3662:22;:49::i;:::-;3654:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3501:272;;;;:::o;8544:173::-;8644:1;8607:39;;:16;:25;8624:7;8607:25;;;;;;;;;;;;;;;;;;;;;:39;;;8603:108;;8698:1;8662:16;:25;8679:7;8662:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;8603:108;8544:173;:::o;6838:813::-;6951:7;6970:17;6990:15;6970:35;;7045:1;7023:24;;:10;:24;;;;7015:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7114:12;7102:9;:24;:45;;;;7146:1;7130:12;:17;7102:45;7094:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:28;7316:1;7290:21;;:25;;:28;;;;:::i;:::-;7266:21;:52;;;;7328:23;;:::i;:::-;7354:100;;;;;;;;7361:10;7354:100;;;;;;7373:8;7354:100;;;;;;7383:21;;7354:100;;;;7406:6;7354:100;;;;7414:9;7354:100;;;;7425:14;7354:100;;;;7441:12;7354:100;;;7328:126;;7464:8;7478:9;7464:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7464:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7541:10;7498:17;:40;7516:21;;7498:40;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7583:21;;7571:10;7566:39;;;;;;;;;;;;7623:21;;7616:28;;;;6838:813;;;;;;:::o;8191:347::-;8312:4;8337:15;:2;:13;;;:15::i;:::-;8332:58;;8375:4;8368:11;;;;8332:58;8400:13;8432:2;8416:36;;;8453:10;8465:4;8471:7;8480:5;8416:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8416:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8416:70:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8416:70:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8416:70:3;;;;;;;;;;;;;;;;8400:86;;1035:10;8514:16;;8504:26;;;:6;:26;;;;8496:35;;;8191:347;;;;;;;:::o;1732:187:10:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;686:610:0:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;71:1321:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.16;\nimport \"./Bank.sol\";\nimport \"./Chequing.sol\";\n\ncontract BankWithChequing is Bank, Chequing {\n    function _printCheque(address receiver, uint256 amount, uint256 usableFromDate, uint256 expiraryDate, bytes memory _data)\n    public returns (bool) {\n        _safeMint(receiver, amount, usableFromDate, expiraryDate, _data);\n        return true;\n    }\n\n    function _printBlankCheque(uint256 usableFromDate, uint256 expiraryDate, bytes memory _data) public returns (bool){\n        return _printCheque(address(0), 0, usableFromDate, expiraryDate, _data);\n    }\n\n    function _cashCheque(uint256 chequeId) public {\n        require(chequeId != 0, \"[uint256 chequeId] cannot be zero\");\n        uint256 chequeIndex = _getChequeIndex(chequeId);\n        require(chequeIndex > 0, \"Cheque with this id does not exist \");\n        uint256 timestamp = block.timestamp;\n        Cheque memory cheque = _cheques[chequeIndex];\n        require(cheque.usableFromDate > timestamp, \"Cheque is not valid to use at this time\");\n        require(cheque.expiraryDate == 0 || cheque.expiraryDate > timestamp, \"Cheque is expired\");\n\n        require(cheque.amount > _ethBalance[cheque.accountOwner], \"Not enough funds to transfer. Cheque has bounced\");\n        _ethBalance[cheque.accountOwner] -= cheque.amount;\n        _ethBalance[cheque.receiver] += cheque.amount;\n        _burn(cheque.id);\n    }\n}",
  "sourcePath": "/home/jason/Documents/Github/erc721-assignment/contracts/BankWithChequin.sol",
  "ast": {
    "absolutePath": "/home/jason/Documents/Github/erc721-assignment/contracts/BankWithChequin.sol",
    "exportedSymbols": {
      "BankWithChequing": [
        292
      ]
    },
    "id": 293,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 147,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/jason/Documents/Github/erc721-assignment/contracts/Bank.sol",
        "file": "./Bank.sol",
        "id": 148,
        "nodeType": "ImportDirective",
        "scope": 293,
        "sourceUnit": 146,
        "src": "24:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jason/Documents/Github/erc721-assignment/contracts/Chequing.sol",
        "file": "./Chequing.sol",
        "id": 149,
        "nodeType": "ImportDirective",
        "scope": 293,
        "sourceUnit": 1198,
        "src": "45:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 150,
              "name": "Bank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 145,
              "src": "100:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Bank_$145",
                "typeString": "contract Bank"
              }
            },
            "id": 151,
            "nodeType": "InheritanceSpecifier",
            "src": "100:4:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 152,
              "name": "Chequing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1197,
              "src": "106:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Chequing_$1197",
                "typeString": "contract Chequing"
              }
            },
            "id": 153,
            "nodeType": "InheritanceSpecifier",
            "src": "106:8:2"
          }
        ],
        "contractDependencies": [
          145,
          1197,
          1298,
          1308,
          1411
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 292,
        "linearizedBaseContracts": [
          292,
          1197,
          1411,
          1298,
          1308,
          145
        ],
        "name": "BankWithChequing",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "269:102:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "289:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "299:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "usableFromDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "307:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "expiraryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "323:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "337:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 168,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 986,
                      "src": "279:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "279:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "279:64:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "360:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 167,
                  "id": 177,
                  "nodeType": "Return",
                  "src": "353:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_printCheque",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "143:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "161:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "name": "usableFromDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "177:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "expiraryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "201:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "223:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "142:100:2"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "263:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "262:6:2"
            },
            "scope": 292,
            "src": "121:250:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "491:88:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "529:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "521:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "521:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "533:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "usableFromDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "536:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "expiraryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "552:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "566:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 190,
                      "name": "_printCheque",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "508:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 189,
                  "id": 199,
                  "nodeType": "Return",
                  "src": "501:71:2"
                }
              ]
            },
            "documentation": null,
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_printBlankCheque",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "name": "usableFromDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "404:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "name": "expiraryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "428:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "450:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "403:66:2"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "486:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "485:6:2"
            },
            "scope": 292,
            "src": "377:202:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "631:759:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 207,
                          "name": "chequeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "649:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "661:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "649:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b75696e743235362063686571756549645d2063616e6e6f74206265207a65726f",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "664:35:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e624e0adefe439dd0730551531940f1958a6343a61c1a87209618947c703d11",
                          "typeString": "literal_string \"[uint256 chequeId] cannot be zero\""
                        },
                        "value": "[uint256 chequeId] cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e624e0adefe439dd0730551531940f1958a6343a61c1a87209618947c703d11",
                          "typeString": "literal_string \"[uint256 chequeId] cannot be zero\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "641:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:59:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "641:59:2"
                },
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "name": "chequeIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 290,
                      "src": "710:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "710:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 216,
                        "name": "chequeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "748:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 215,
                      "name": "_getChequeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "732:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "710:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "chequeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "775:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "789:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "775:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4368657175652077697468207468697320696420646f6573206e6f7420657869737420",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "792:37:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8391e518de7c9a2a934a9f9bd93db0594b31e97ce0ccc793d573027f8df7af75",
                          "typeString": "literal_string \"Cheque with this id does not exist \""
                        },
                        "value": "Cheque with this id does not exist "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8391e518de7c9a2a934a9f9bd93db0594b31e97ce0ccc793d573027f8df7af75",
                          "typeString": "literal_string \"Cheque with this id does not exist \""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "767:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "767:63:2"
                },
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "name": "timestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 290,
                      "src": "840:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "840:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 230,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1676,
                      "src": "860:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "860:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "840:35:2"
                },
                {
                  "assignments": [
                    232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 232,
                      "name": "cheque",
                      "nodeType": "VariableDeclaration",
                      "scope": 290,
                      "src": "885:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                        "typeString": "struct Chequing.Cheque"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 231,
                        "name": "Cheque",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 336,
                        "src": "885:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cheque_$336_storage_ptr",
                          "typeString": "struct Chequing.Cheque"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 236,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "_cheques",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "908:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Cheque_$336_storage_$dyn_storage",
                        "typeString": "struct Chequing.Cheque storage ref[] storage ref"
                      }
                    },
                    "id": 235,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 234,
                      "name": "chequeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "917:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "908:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Cheque_$336_storage",
                      "typeString": "struct Chequing.Cheque storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "885:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 238,
                            "name": "cheque",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "947:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                              "typeString": "struct Chequing.Cheque memory"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "usableFromDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 333,
                          "src": "947:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "971:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "947:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436865717565206973206e6f742076616c696420746f2075736520617420746869732074696d65",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "982:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6ced3f6b5600cab891c84a9b64c02fdbc1303d6f29cb173cee7f483ee9ee87",
                          "typeString": "literal_string \"Cheque is not valid to use at this time\""
                        },
                        "value": "Cheque is not valid to use at this time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6ced3f6b5600cab891c84a9b64c02fdbc1303d6f29cb173cee7f483ee9ee87",
                          "typeString": "literal_string \"Cheque is not valid to use at this time\""
                        }
                      ],
                      "id": 237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "939:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "939:85:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "939:85:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 246,
                              "name": "cheque",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "1042:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                                "typeString": "struct Chequing.Cheque memory"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiraryDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 335,
                            "src": "1042:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1065:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1042:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 250,
                              "name": "cheque",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "1070:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                                "typeString": "struct Chequing.Cheque memory"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiraryDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 335,
                            "src": "1070:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "1092:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1070:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1042:59:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4368657175652069732065787069726564",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1103:19:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_039dd7dfe6b78b178ec86b7ec15a558b83b7691510eb0e903bff7dd33547aeed",
                          "typeString": "literal_string \"Cheque is expired\""
                        },
                        "value": "Cheque is expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_039dd7dfe6b78b178ec86b7ec15a558b83b7691510eb0e903bff7dd33547aeed",
                          "typeString": "literal_string \"Cheque is expired\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "1034:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:89:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 259,
                            "name": "cheque",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "1142:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                              "typeString": "struct Chequing.Cheque memory"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 329,
                          "src": "1142:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 261,
                            "name": "_ethBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1158:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 264,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 262,
                              "name": "cheque",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "1170:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                                "typeString": "struct Chequing.Cheque memory"
                              }
                            },
                            "id": 263,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "accountOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 323,
                            "src": "1170:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1158:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1142:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682066756e647320746f207472616e736665722e204368657175652068617320626f756e636564",
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1192:50:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_789915a9097f1a2b6a907e0aedb865e2df7a0afb52705c8d670f2c2e55f91aa5",
                          "typeString": "literal_string \"Not enough funds to transfer. Cheque has bounced\""
                        },
                        "value": "Not enough funds to transfer. Cheque has bounced"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_789915a9097f1a2b6a907e0aedb865e2df7a0afb52705c8d670f2c2e55f91aa5",
                          "typeString": "literal_string \"Not enough funds to transfer. Cheque has bounced\""
                        }
                      ],
                      "id": 258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "1134:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:109:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:109:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "_ethBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1253:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "cheque",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "1265:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                            "typeString": "struct Chequing.Cheque memory"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "accountOwner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "1265:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1253:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 273,
                        "name": "cheque",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "1289:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                          "typeString": "struct Chequing.Cheque memory"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 329,
                      "src": "1289:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1253:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:49:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "_ethBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1312:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 278,
                          "name": "cheque",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "1324:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                            "typeString": "struct Chequing.Cheque memory"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "receiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 325,
                        "src": "1324:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1312:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "cheque",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "1344:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                          "typeString": "struct Chequing.Cheque memory"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 329,
                      "src": "1344:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1312:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "cheque",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "1373:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                            "typeString": "struct Chequing.Cheque memory"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 327,
                        "src": "1373:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1113,
                      "src": "1367:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:16:2"
                }
              ]
            },
            "documentation": null,
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_cashCheque",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "name": "chequeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "606:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "605:18:2"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:0:2"
            },
            "scope": 292,
            "src": "585:805:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 293,
        "src": "71:1321:2"
      }
    ],
    "src": "0:1392:2"
  },
  "legacyAST": {
    "absolutePath": "/home/jason/Documents/Github/erc721-assignment/contracts/BankWithChequin.sol",
    "exportedSymbols": {
      "BankWithChequing": [
        292
      ]
    },
    "id": 293,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 147,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/jason/Documents/Github/erc721-assignment/contracts/Bank.sol",
        "file": "./Bank.sol",
        "id": 148,
        "nodeType": "ImportDirective",
        "scope": 293,
        "sourceUnit": 146,
        "src": "24:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jason/Documents/Github/erc721-assignment/contracts/Chequing.sol",
        "file": "./Chequing.sol",
        "id": 149,
        "nodeType": "ImportDirective",
        "scope": 293,
        "sourceUnit": 1198,
        "src": "45:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 150,
              "name": "Bank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 145,
              "src": "100:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Bank_$145",
                "typeString": "contract Bank"
              }
            },
            "id": 151,
            "nodeType": "InheritanceSpecifier",
            "src": "100:4:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 152,
              "name": "Chequing",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1197,
              "src": "106:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Chequing_$1197",
                "typeString": "contract Chequing"
              }
            },
            "id": 153,
            "nodeType": "InheritanceSpecifier",
            "src": "106:8:2"
          }
        ],
        "contractDependencies": [
          145,
          1197,
          1298,
          1308,
          1411
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 292,
        "linearizedBaseContracts": [
          292,
          1197,
          1411,
          1298,
          1308,
          145
        ],
        "name": "BankWithChequing",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "269:102:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 169,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155,
                        "src": "289:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "299:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "usableFromDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "307:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "expiraryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "323:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "337:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 168,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 986,
                      "src": "279:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "279:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "279:64:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "360:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 167,
                  "id": 177,
                  "nodeType": "Return",
                  "src": "353:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_printCheque",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "143:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "161:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "name": "usableFromDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "177:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "name": "expiraryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "201:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "223:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "142:100:2"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "263:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "262:6:2"
            },
            "scope": 292,
            "src": "121:250:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "491:88:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "529:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "521:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "521:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "533:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 195,
                        "name": "usableFromDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "536:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "expiraryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "552:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "566:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 190,
                      "name": "_printCheque",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "508:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 189,
                  "id": 199,
                  "nodeType": "Return",
                  "src": "501:71:2"
                }
              ]
            },
            "documentation": null,
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_printBlankCheque",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "name": "usableFromDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "404:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "name": "expiraryDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "428:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "450:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "403:66:2"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "486:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "485:6:2"
            },
            "scope": 292,
            "src": "377:202:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "631:759:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 207,
                          "name": "chequeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "649:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "661:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "649:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b75696e743235362063686571756549645d2063616e6e6f74206265207a65726f",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "664:35:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e624e0adefe439dd0730551531940f1958a6343a61c1a87209618947c703d11",
                          "typeString": "literal_string \"[uint256 chequeId] cannot be zero\""
                        },
                        "value": "[uint256 chequeId] cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e624e0adefe439dd0730551531940f1958a6343a61c1a87209618947c703d11",
                          "typeString": "literal_string \"[uint256 chequeId] cannot be zero\""
                        }
                      ],
                      "id": 206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "641:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:59:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "641:59:2"
                },
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "name": "chequeIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 290,
                      "src": "710:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "710:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 216,
                        "name": "chequeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "748:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 215,
                      "name": "_getChequeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "732:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "710:47:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 220,
                          "name": "chequeIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "775:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "789:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "775:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4368657175652077697468207468697320696420646f6573206e6f7420657869737420",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "792:37:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8391e518de7c9a2a934a9f9bd93db0594b31e97ce0ccc793d573027f8df7af75",
                          "typeString": "literal_string \"Cheque with this id does not exist \""
                        },
                        "value": "Cheque with this id does not exist "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8391e518de7c9a2a934a9f9bd93db0594b31e97ce0ccc793d573027f8df7af75",
                          "typeString": "literal_string \"Cheque with this id does not exist \""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "767:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "767:63:2"
                },
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "name": "timestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 290,
                      "src": "840:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "840:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 230,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1676,
                      "src": "860:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "860:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "840:35:2"
                },
                {
                  "assignments": [
                    232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 232,
                      "name": "cheque",
                      "nodeType": "VariableDeclaration",
                      "scope": 290,
                      "src": "885:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                        "typeString": "struct Chequing.Cheque"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 231,
                        "name": "Cheque",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 336,
                        "src": "885:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cheque_$336_storage_ptr",
                          "typeString": "struct Chequing.Cheque"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 236,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "_cheques",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "908:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Cheque_$336_storage_$dyn_storage",
                        "typeString": "struct Chequing.Cheque storage ref[] storage ref"
                      }
                    },
                    "id": 235,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 234,
                      "name": "chequeIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "917:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "908:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Cheque_$336_storage",
                      "typeString": "struct Chequing.Cheque storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "885:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 238,
                            "name": "cheque",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "947:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                              "typeString": "struct Chequing.Cheque memory"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "usableFromDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 333,
                          "src": "947:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "971:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "947:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436865717565206973206e6f742076616c696420746f2075736520617420746869732074696d65",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "982:41:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6ced3f6b5600cab891c84a9b64c02fdbc1303d6f29cb173cee7f483ee9ee87",
                          "typeString": "literal_string \"Cheque is not valid to use at this time\""
                        },
                        "value": "Cheque is not valid to use at this time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6ced3f6b5600cab891c84a9b64c02fdbc1303d6f29cb173cee7f483ee9ee87",
                          "typeString": "literal_string \"Cheque is not valid to use at this time\""
                        }
                      ],
                      "id": 237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "939:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "939:85:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "939:85:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 246,
                              "name": "cheque",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "1042:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                                "typeString": "struct Chequing.Cheque memory"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiraryDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 335,
                            "src": "1042:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1065:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1042:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 250,
                              "name": "cheque",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "1070:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                                "typeString": "struct Chequing.Cheque memory"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expiraryDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 335,
                            "src": "1070:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "1092:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1070:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1042:59:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4368657175652069732065787069726564",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1103:19:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_039dd7dfe6b78b178ec86b7ec15a558b83b7691510eb0e903bff7dd33547aeed",
                          "typeString": "literal_string \"Cheque is expired\""
                        },
                        "value": "Cheque is expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_039dd7dfe6b78b178ec86b7ec15a558b83b7691510eb0e903bff7dd33547aeed",
                          "typeString": "literal_string \"Cheque is expired\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "1034:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:89:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 259,
                            "name": "cheque",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "1142:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                              "typeString": "struct Chequing.Cheque memory"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 329,
                          "src": "1142:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 261,
                            "name": "_ethBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1158:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 264,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 262,
                              "name": "cheque",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "1170:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                                "typeString": "struct Chequing.Cheque memory"
                              }
                            },
                            "id": 263,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "accountOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 323,
                            "src": "1170:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1158:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1142:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f7567682066756e647320746f207472616e736665722e204368657175652068617320626f756e636564",
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1192:50:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_789915a9097f1a2b6a907e0aedb865e2df7a0afb52705c8d670f2c2e55f91aa5",
                          "typeString": "literal_string \"Not enough funds to transfer. Cheque has bounced\""
                        },
                        "value": "Not enough funds to transfer. Cheque has bounced"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_789915a9097f1a2b6a907e0aedb865e2df7a0afb52705c8d670f2c2e55f91aa5",
                          "typeString": "literal_string \"Not enough funds to transfer. Cheque has bounced\""
                        }
                      ],
                      "id": 258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1689,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "1134:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:109:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:109:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 269,
                        "name": "_ethBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1253:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 272,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "cheque",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "1265:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                            "typeString": "struct Chequing.Cheque memory"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "accountOwner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 323,
                        "src": "1265:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1253:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 273,
                        "name": "cheque",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "1289:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                          "typeString": "struct Chequing.Cheque memory"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 329,
                      "src": "1289:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1253:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:49:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "_ethBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1312:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 278,
                          "name": "cheque",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "1324:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                            "typeString": "struct Chequing.Cheque memory"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "receiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 325,
                        "src": "1324:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1312:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "cheque",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "1344:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                          "typeString": "struct Chequing.Cheque memory"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 329,
                      "src": "1344:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1312:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:45:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "cheque",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "1373:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Cheque_$336_memory_ptr",
                            "typeString": "struct Chequing.Cheque memory"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 327,
                        "src": "1373:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1113,
                      "src": "1367:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:16:2"
                }
              ]
            },
            "documentation": null,
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_cashCheque",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "name": "chequeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "606:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "605:18:2"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:0:2"
            },
            "scope": 292,
            "src": "585:805:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 293,
        "src": "71:1321:2"
      }
    ],
    "src": "0:1392:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1579714699325": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0xC2013166412164391cedCc3341cBCa6495DC2AD3",
      "transactionHash": "0xd2a8c82d095d568ba0c16660a5a3a0eb1b7de3155db2711a932083a6c09bbf7b"
    }
  },
  "schemaVersion": "3.0.21",
  "updatedAt": "2020-01-25T17:45:15.338Z",
  "devdoc": {
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}